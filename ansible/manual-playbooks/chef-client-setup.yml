---
- hosts: localhost
  vars:
    - appname: chef-repo
    - keydir: /etc/default/chefserver/keys
    #- username: jdoe
    #- orgname: example
  tasks:
    - name: Ensure chefdk is already installed
      package:
        name: chefdk
        state: present
      become: yes
    - name: Create the initial app
      command: chef generate app {{ appname }}
      args:
        chdir: "{{ ansible_user_dir }}"
        creates: "{{ ansible_user_dir }}/{{ appname }}"
    - name: Create the app config directory
      file:
        path: "{{ ansible_user_dir }}/{{ appname }}/.chef"
        state: directory
    - name: Ensure knife.rb exists
      file:
        path: "{{ ansible_user_dir }}/{{ appname }}/.chef/knife.rb"
        state: touch
    - name: Create knife.rb
      blockinfile:
        path: "{{ ansible_user_dir }}/{{ appname }}/.chef/knife.rb"
        block: |
          current_dir = File.dirname(__FILE__)
          log_level                :info
          log_location             STDOUT
          node_name                '{{ username }}'
          client_key               "#{current_dir}/{{ username }}.pem"
          validation_client_name   '{{ orgname }}-validator'
          validation_key           "#{current_dir}/{{ orgname }}-validator.pem"
          chef_server_url          'https://{{ ansible_hostname }}/organizations/{{ orgname }}'
          cache_type               'BasicFile'
          cache_options( :path => "#{ENV['HOME']}/.chef/checksums" )
          cookbook_path            ["#{current_dir}/../cookbooks"]
    - name: Make sure chefdk bin dir is added to path in shell profile
      lineinfile:
        path: "{{ ansible_user_dir }}/.bash_profile"
        line: 'export PATH="/opt/chefdk/embedded/bin:$PATH"'
    - name: Copy user cert
      copy:
        dest: "{{ ansible_user_dir }}/{{ appname }}/.chef/{{ username }}.pem"
        src: "{{ keydir }}/{{ username }}.pem"
        remote_src: yes
    - name: Copy server cert
      copy:
        dest: "{{ ansible_user_dir }}/{{ appname }}/.chef/trusted_certs/{{ orgname }}-validator.pem"
        src: "{{ keydir }}/{{ orgname }}-validator.pem"
        remote_src: yes
